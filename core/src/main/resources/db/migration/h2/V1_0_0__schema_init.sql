--
-- DB script for creating necessary tables (H2)
--
-- PREREQUISITES: none
--

---
--- TABLES
---

CREATE TABLE CONFIGURATION_ITEM
(
    CODE varchar(255) PRIMARY KEY NOT NULL,
    CATEGORY_CODE varchar(100) NOT NULL,
    CURRENT_VALUE varchar(1000),
    DATA_TYPE varchar(20) NOT NULL,
    DEFAULT_VALUE varchar(1000),
    DESCRIPTION varchar(1000),
    MANDATORY boolean,
    VALIDATION varchar(100)
);

CREATE TABLE MESSAGE
(
    MSG_ID bigint PRIMARY KEY NOT NULL,
    BUSINESS_ERROR varchar(20000),
    CORRELATION_ID varchar(100) NOT NULL,
    CUSTOM_DATA varchar(20000),
    ENTITY_TYPE varchar(30),
    ENVELOPE varchar(2147483647),
    EXCLUDE_FAILED_STATE boolean NOT NULL,
    FAILED_COUNT integer NOT NULL,
    FAILED_DESC varchar(2147483647),
    FAILED_ERROR_CODE varchar(5),
    FUNNEL_COMPONENT_ID varchar(50),
    FUNNEL_VALUE varchar(50),
    GUARANTEED_ORDER boolean NOT NULL,
    LAST_UPDATE_TIMESTAMP timestamp,
    MSG_TIMESTAMP timestamp NOT NULL,
    NODE_ID bigint,
    OBJECT_ID varchar(50),
    OPERATION_NAME varchar(100) NOT NULL,
    PARENT_BINDING_TYPE varchar(25),
    PARENT_MSG_ID bigint,
    PAYLOAD varchar(2147483647) NOT NULL,
    PROCESS_ID varchar(100),
    RECEIVE_TIMESTAMP timestamp NOT NULL,
    SERVICE varchar(30) NOT NULL,
    SOURCE_SYSTEM varchar(15) NOT NULL,
    START_IN_QUEUE_TIMESTAMP timestamp,
    START_PROCESS_TIMESTAMP timestamp,
    STATE varchar(25) NOT NULL
);
CREATE UNIQUE INDEX UQ_CORRELATION_SYSTEM_INDEX_6 ON MESSAGE (CORRELATION_ID, SOURCE_SYSTEM);

CREATE TABLE EXTERNAL_CALL
(
    CALL_ID bigint PRIMARY KEY NOT NULL,
    CREATION_TIMESTAMP timestamp NOT NULL,
    ENTITY_ID varchar(150) NOT NULL,
    FAILED_COUNT integer NOT NULL,
    LAST_UPDATE_TIMESTAMP timestamp NOT NULL,
    MSG_ID bigint NOT NULL,
    MSG_TIMESTAMP timestamp NOT NULL,
    OPERATION_NAME varchar(100) NOT NULL,
    STATE varchar(20) NOT NULL,
    CONSTRAINT FKQJ7BA73BJXD7XV9XKA3RXUF4M FOREIGN KEY (MSG_ID) REFERENCES MESSAGE (MSG_ID)
);
CREATE UNIQUE INDEX UQ_OPERATION_ENTITY_ID_INDEX_B ON EXTERNAL_CALL (OPERATION_NAME, ENTITY_ID);

CREATE TABLE NODE
(
    NODE_ID bigint PRIMARY KEY NOT NULL,
    CODE varchar(64) NOT NULL,
    DESCRIPTION varchar(2056),
    NAME varchar(256) NOT NULL,
    STATE varchar(64) NOT NULL
);
CREATE UNIQUE INDEX UK_TCGSVCB1U24GNSRTGKFUUCBR6_INDEX_2 ON NODE (CODE);
CREATE UNIQUE INDEX UK_FWIGXDMJ6BSRPCMHCGPMLSIRH_INDEX_2 ON NODE (NAME);

CREATE TABLE REQUEST
(
    REQ_ID bigint PRIMARY KEY NOT NULL,
    MSG_ID bigint,
    REQ_TIMESTAMP timestamp NOT NULL,
    REQ_ENVELOPE varchar(2147483647) NOT NULL,
    RES_JOIN_ID varchar(100) NOT NULL,
    URI varchar(400) NOT NULL,
    CONSTRAINT FKMB95LWQX0QQN830RWDBAN187O FOREIGN KEY (MSG_ID) REFERENCES MESSAGE (MSG_ID)
);

CREATE TABLE RESPONSE
(
    RES_ID bigint PRIMARY KEY NOT NULL,
    FAILED boolean NOT NULL,
    FAILED_REASON varchar(2147483647),
    RES_TIMESTAMP timestamp,
    RES_ENVELOPE varchar(2147483647),
    MSG_ID bigint,
    REQ_ID bigint,
    CONSTRAINT FKMRK9KJXAWIAL0973KSGJQKOA2 FOREIGN KEY (MSG_ID) REFERENCES MESSAGE (MSG_ID),
    CONSTRAINT FKO1WN9A2359KS1RE952WA3WVTR FOREIGN KEY (REQ_ID) REFERENCES REQUEST (REQ_ID)
);

---
--- SEQUENCES
---

CREATE SEQUENCE OPENHUB_SEQUENCE;
CREATE SEQUENCE OPENHUB_NODE_SEQUENCE;