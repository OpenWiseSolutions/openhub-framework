<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright 2017 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<included>

    <jmxConfigurator/>

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

    <property scope="system" name="SERVER_ID" value="${ohf.cluster.actualNodeInstance.code:-${HOSTNAME}}" />
    <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{ISO8601}){faint} [%clr(${SERVER_ID}){magenta}, %thread, %X{REQUEST_URI}, %X{REQUEST_ID}, %X{SESSION_ID}, %X{SOURCE_SYSTEM}, %X{CORRELATION_ID}, %X{PROCESS_ID}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%-40.40logger{36}){cyan} : %msg%n"/>
    <property name="FILE_LOG_PATTERN" value="%d{ISO8601} [${SERVER_ID}, %thread, %X{REQUEST_URI}, %X{REQUEST_ID}, %X{SESSION_ID},%X{SOURCE_SYSTEM}, %X{CORRELATION_ID}, %X{PROCESS_ID}] ${LOG_LEVEL_PATTERN:-%5p} %-40.40logger{36} : %msg%n"/>

    <!-- This is the default development console appender, it uses System.out and it should not be used in the production mode. -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.out</target>
        <encoder>
            <!--
                An example of the pattern:
                2011-04-05 08:07:07,964 [thanus-macbook.local, http-8080-Processor16, /sc-web-console/sc/sn/mock_demo_service/on/Demo,
                 127.0.1.1:4c8ed99e:12f244556e1:-7fdd, 6B6*****C6C2, deih3u36bh, process123] INFO  c.c.s.f.w.f.screen.ScreenFormPanel 
                 : the message for key 'widget16_label_key' was not found: form='demo_form1', locale='cs'
            -->
            <pattern>${logging.pattern.console:-${CONSOLE_LOG_PATTERN}}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="FILE" class="org.openhubframework.openhub.common.log.LazyRollingFileLogbackAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>@log.folder@openhub_%d{yyyy-MM-dd}_%i.log</fileNamePattern>

            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${logging.pattern.file:-${FILE_LOG_PATTERN}}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- OpenHub integration framework namespaces -->
    <logger name="org.openhubframework.openhub" level="${logging.level.org.openhubframework.openhub:-INFO}"/>
    <logger name="org.openhubframework.openhub.web.RequestResponseLoggingFilter" level="${logging.level.org.openhubframework.openhub.admin.web.filter.RequestResponseLoggingFilter:-DEBUG}"/>
    <!-- Spring namespaces -->
    <logger name="org.springframework.ws" level="${logging.level.org.springframework.ws:-INFO}"/>
    <!--
        To log all client-side messages, simply set the MessageTracing logger to level DEBUG or TRACE. On the debug level,
        only the payload root element is logged; on the TRACE level, the entire message content.
        If you only want to log sent messages, use the org.springframework.ws.client.MessageTracing.sent logger;
        or org.springframework.ws.client.MessageTracing.received to log received messages.

        similar for server-side: org.springframework.ws.server.MessageTracing
    -->
    <logger name="org.springframework.ws.server.MessageTracing" level="${logging.level.org.springframework.ws.client.MessageTracing:-TRACE}"/>
    <logger name="org.springframework.ws.client.MessageTracing" level="${logging.level.org.springframework.ws.client.MessageTracing:-TRACE}"/>
    <!-- Camel namespaces -->
    <logger name="org.apache.camel" level="${logging.level.org.apache.camel:-INFO}"/>
    <logger name="org.apache.camel.converter.jaxb.JaxbDataFormat" level="${logging.level.org.apache.camel.converter.jaxb.JaxbDataFormat:-WARN}"/>
    <logger name="org.apache.camel.processor.interceptor.Tracer" level="${logging.level.org.apache.camel.processor.interceptor.Tracer:-WARN}"/>
    <!-- Hibernate namespaces -->
    <logger name="org.hibernate.SQL" level="${logging.level.org.hibernate.SQL:-WARN}"/>
    <logger name="org.hibernate.engine.internal.StatisticalLoggingSessionEventListener" level="${logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener:-ERROR}"/>
    <!-- HTTP client logging -->
    <logger name="org.apache.http" level="${logging.level.org.apache.http:-INFO}"/>
    <logger name="org.apache.http.wire" level="${logging.level.org.apache.http.wire:-INFO}"/>

    <root level="${logging.level.root:-INFO}">
        <if condition='"@log.console.enabled@".equalsIgnoreCase("true")'>
            <then><appender-ref ref="CONSOLE"/></then>
        </if>
        <if condition='"@log.file.enabled@".equalsIgnoreCase("true")'>
            <then><appender-ref ref="FILE"/></then>
        </if>
    </root>
</included>