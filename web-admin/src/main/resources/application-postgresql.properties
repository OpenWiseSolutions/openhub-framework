# ===================================================================
# OpenHub PostgreSQL data source properties
#
# ===================================================================

## DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# name of the data source
spring.datasource.name=OHF
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
# populate using data.sql
spring.datasource.initialize=false
# a schema (DDL) script resource reference
#spring.datasource.schema=classpath:db/db_schema_postgreSql.sql,classpath:db/db_schema_postgreSql_0_4.sql,classpath:db/db_schema_postgreSql_archive_0_4.sql
# a data (DML) script resource reference
spring.datasource.data=classpath:/db/db_init-configuration.sql
# a charset for reading SQL scripts
spring.datasource.sql-script-encoding=UTF-8
# the platform to use in the schema resource (schema-${platform}.sql)
spring.datasource.platform=postgresql
#spring.datasource.continue-on-error=false # continue even if can't be initialized
#spring.datasource.separator=; # statement separator in SQL initialization scripts
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/openhubdb?currentSchema=openHub
spring.datasource.username=openhub
spring.datasource.password=pass
#spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set)
spring.datasource.hikari.pool-name=OHF-HikariCP
spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.hikari.minimum-idle=10
spring.datasource.validation-query=select 'connection test'
#spring.datasource.test-on-borrow=false
#spring.datasource.test-on-return=false
#spring.datasource.test-while-idle=
#spring.datasource.time-between-eviction-runs-millis=
#spring.datasource.min-evictable-idle-time-millis=
#spring.datasource.max-wait=
#spring.datasource.jmx-enabled=false # Export JMX MBeans (if supported)

# ===============================
# = QUARTZ
# ===============================
#configuration for cluster scheduler - save jobs and triggers into postgres database
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
